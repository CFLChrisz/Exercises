Exercices
Exercice 1:

À partir de votre exercice sur les données DMS (exercice du mardi, semaine du 28 février et exercice 6, semaine du 07 mars), créez un programme permettant de recevoir une liste de données(en DMS) dans un fichier data.txt d'une taille indéterminée et trouvez la position la plus proche du Pôle-Nord.

Pour tester l'exécution de votre programme vous devez créer une liste ayant les positions en DMS d'au moins 10 villes et les placer dans le fichier data.txt.


Exercice 2:

À partir de votre programme de calcul de l'effet de l'inflation (exercice 9(supplémentaires), semaine du 07 mars), implémentez un programme prenant une fichier intitulé ipc.txt où vous aurez les IPCs des années 1960 à 2021 et permettant à l'utilisateur d'entrer une année de son choix pour effectuer le calcul. Vous devez aussi permettre à l'utilisateur d'entrer le prix de l'article en 1970 et son coût en 2021 pour connaitre le nom d'heures de travail nécessaire.

Exercice 3:

Créer une fonction prenant une liste de nombres, d'une taille indéterminée, et permettant de les trier en ordre croissant. (Vous ne pouvez pas utiliser sort() ou sorted(), vous devez vous-même implémenter l'algorithme)


Exercice 4:

Créer un menu demandant à un utilisateur d'entrer un nombre pair, divisible par 3 et entre 10 et 29. Si l'utilisateur entre un nombre ne correspondant pas à ces conditions, offrez-lui l'opportunité de faire un nouvel essai, tant et aussi longtemps qu'il n'entre pas un bon nombre.

Exercice 5:
Offrir à l'utilisateur d'entrer un nom de fichier et un nombre illimité de nombres positifs, tant et aussi longtemps qu'il ne rentre pas un nombre négatif. Ajouter les nombres entrés par l'utilisateur à une liste en excluant le nombre négatif. Ensuite, écrire les résultats suivants dans le fichier nommé par l'utilisateur:

La liste en ordre croissant
La liste en ordre décroissant
Le maximum
Le minimum
La moyenne de la liste
La médiane (la valeur à la position centrale si la longueur de la liste est impaire et la moyenne des deux valeurs centrales si paire)
Ex: 1, 2, 3, 5, 4. Médiane = 3.
Ex: 1, 2, 3, 4, 5, 6. Médiane = 3.5
Le mode (l'occurrence la plus fréquente s'il y a lieu. Si chaque entrée est unique, inscrire que le mode = none)
Ex: 1, 2, 2, 2, 3, 4, 3, 4. La mode = 2
Vous ne pouvez pas utiliser de module, vous devez donc vous-même implémenter l'algorithme pour trier une liste en ordre croissant, trier une liste en ordre décroissant, trouver le maximum, trouver le minimum, calculer la moyenne, trouver la médiane, et trouver le mode(utilisez un dictionnaire pour chaque donnée en tant que clef, affectez 0 comme valeur initiale et incrémentez de 1 à chaque répétition).

Faire la revue de paires pour l'exercice 5.

